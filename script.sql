-- Creation
USE khakaton;

-- Tables
-- Root tables
CREATE TABLE STUDENT (
	ID INT AUTO_INCREMENT PRIMARY KEY,
    SNAME VARCHAR(24) NOT NULL,
    UNIVERSITY VARCHAR(24) NOT NULL
);

CREATE TABLE ORGANIZATOR (
	ID INT AUTO_INCREMENT PRIMARY KEY,
    ONAME VARCHAR(24) NOT NULL,
    UNIVERSITY VARCHAR(24) NOT NULL
);

CREATE TABLE ACCESSOR (
	ID INT AUTO_INCREMENT PRIMARY KEY,
    ANAME VARCHAR(24) NOT NULL
);

CREATE TABLE COMPETITION (
	ID INT AUTO_INCREMENT PRIMARY KEY,
    CNAME VARCHAR(24) NOT NULL
);

-- Relating tables

CREATE TABLE `EVENT` (
	ID INT AUTO_INCREMENT PRIMARY KEY,
    ENAME VARCHAR(24) NOT NULL,
    ORGANIZATOR INT NOT NULL,
    PLACE VARCHAR(64) NOT NULL,
    ETIME DATETIME NOT NULL,
	FOREIGN KEY (ORGANIZATOR) REFERENCES ORGANIZATOR(ID)
        ON UPDATE CASCADE ON DELETE CASCADE	
);

CREATE TABLE IDENTIFIER (
	ID INT AUTO_INCREMENT PRIMARY KEY,
    COMPETITION INT NOT NULL,
    INAME VARCHAR(24) NOT NULL,
    ILEVEL INT NOT NULL,
	FOREIGN KEY (COMPETITION) REFERENCES COMPETITION(ID)
		ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE `COMMENT` (
	ID INT AUTO_INCREMENT PRIMARY KEY,
	STUDENT INT NOT NULL,
    `EVENT` INT NOT NULL,
    FOREIGN KEY (STUDENT) REFERENCES STUDENT(ID)
		ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (`EVENT`) REFERENCES `EVENT`(ID)
		ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE STUDENT_IDENTIFIER (
	STUDENT INT NOT NULL,
	IDENTIFIER INT NOT NULL,
    PRIMARY KEY (STUDENT, IDENTIFIER),
    `VALUE` BOOL NOT NULL,
	FOREIGN KEY (STUDENT) REFERENCES STUDENT(ID)
		ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (IDENTIFIER) REFERENCES IDENTIFIER(ID)
		ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE STUDENT_IDENTIFIER_INTEREST (
	STUDENT INT NOT NULL,
	IDENTIFIER INT NOT NULL,
    PRIMARY KEY (STUDENT, IDENTIFIER),
    `VALUE` BOOL NOT NULL,
	FOREIGN KEY (STUDENT) REFERENCES STUDENT(ID)
		ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (IDENTIFIER) REFERENCES IDENTIFIER(ID)
		ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE EVENT_IDENTIFIER (
	`EVENT` INT NOT NULL,
	IDENTIFIER INT NOT NULL,
    PRIMARY KEY (`EVENT`, IDENTIFIER),
    `VALUE` BOOL NOT NULL,
	FOREIGN KEY (`EVENT`) REFERENCES `EVENT`(ID)
		ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (IDENTIFIER) REFERENCES IDENTIFIER(ID)
		ON UPDATE CASCADE ON DELETE CASCADE
);
-- OK UNTIL HERE

-- Insertion
INSERT INTO STUDENT (SNAME, UNIVERSITY) VALUES ('Константин', 'МПК ТИУ');
INSERT INTO STUDENT (SNAME, UNIVERSITY) VALUES ('Сергей', 'МПК ТИУ');
INSERT INTO STUDENT (SNAME, UNIVERSITY) VALUES ('Олег', 'ТГУ');
INSERT INTO ACCESSOR (ANAME) VALUES ('Вячеслав');
INSERT INTO ACCESSOR (ANAME) VALUES ('Евгений');
INSERT INTO ACCESSOR (ANAME) VALUES ('Иван');
INSERT INTO OGRANIZATOR (ONAME, UNIVERSITY) VALUES ('Александр', 'МПК ТИУ');
INSERT INTO OGRANIZATOR (ONAME, UNIVERSITY) VALUES ('Алексей', 'ТГУ');
INSERT INTO 
-- DONE UNTIL HERE

SELECT * FROM STUDENT;
